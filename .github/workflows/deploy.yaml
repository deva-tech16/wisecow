name: CI/CD - Build & deploy Wisecow to Kind (HTTP, no TLS)

on:
  push:
    branches:
      - main
      - master
      - 'feature/*'

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t wisecow:latest .

    - name: Install kind v0.30.0
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.30.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        kind --version

    - name: Create kind cluster (default node image)
      run: |
        kind create cluster --name wisecow

    - name: Load image into kind
      run: |
        kind load docker-image wisecow:latest --name wisecow

    - name: Install kubectl (if missing)
      run: |
        if ! command -v kubectl >/dev/null 2>&1; then
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        fi
        kubectl version --client

    - name: Install ingress-nginx for kind (robust wait)
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

        for i in {1..12}; do
          if kubectl -n ingress-nginx get deployment ingress-nginx-controller >/dev/null 2>&1; then
            echo "ingress-nginx controller deployment found"
            break
          fi
          echo "waiting for ingress-nginx deployment to be created..."
          sleep 5
        done

        if kubectl -n ingress-nginx get deployment ingress-nginx-controller >/dev/null 2>&1; then
          kubectl -n ingress-nginx rollout status deployment/ingress-nginx-controller --timeout=180s || \
            (echo "rollout status timed out; will check pod readiness next" && true)
        fi

        echo "ensuring controller pod is Ready (fallback check)..."
        kubectl -n ingress-nginx wait --for=condition=Ready pod -l app.kubernetes.io/component=controller --timeout=180s || \
          (echo "fallback wait failed; showing pods for debugging" && kubectl -n ingress-nginx get pods -o wide && exit 1)

    - name: Create namespace
      run: kubectl apply -f k8s/wisecow-namespace.yaml

    - name: Deploy Wisecow resources
      run: |
        kubectl apply -f k8s/wisecow-deployment.yaml
        kubectl apply -f k8s/wisecow-service.yaml
        if [ -f k8s/wisecow-ingress.yaml ]; then kubectl apply -f k8s/wisecow-ingress.yaml; fi

    - name: Wait for rollout
      run: |
        kubectl -n wisecow rollout status deployment/wisecow-deployment --timeout=120s || true

    - name: Show resources
      run: |
        kubectl -n wisecow get pods -o wide || true
        kubectl -n wisecow get svc -o wide || true
        kubectl -n ingress-nginx get svc -o wide || true

    - name: Port-forward ingress controller HTTP and test (plain HTTP)
      run: |
        kubectl -n ingress-nginx port-forward svc/ingress-nginx-controller 8080:80 >/tmp/port-forward.log 2>&1 &
        sleep 6
        echo "=== curl http test ==="
        if grep -q "host:" k8s/wisecow-ingress.yaml 2>/dev/null; then
          curl -s -v --resolve "wisecow.local:8080:127.0.0.1" http://wisecow.local:8080/ || true
        else
          curl -s -v http://127.0.0.1:8080/ || true
        fi
        echo "=== port-forward logs ==="
        tail -n +1 /tmp/port-forward.log || true

    - name: Upload basic logs for debugging
      uses: actions/upload-artifact@v4
      with:
        name: wisecow-debug
        path: |
          /tmp/port-forward.log
